package components

import "fmt"
import "time"

templ BoxErrorMsg(msg string) {
<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
    <strong class="font-bold">Błąd:</strong>
    <span class="block sm:inline">{msg}</span>
</div>
}

templ BoxMsg(msg string) {
<div class="bg-gray-100 border border-red-700 px-4 py-3 rounded relative" role="alert">
    <span class="block sm:inline">{msg}</span>
</div>
}

templ InputFieldWithValidation(inputType, id, label, val, validation_path, errs string, req bool) {
	<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
		{ label }
	</label>
	<input
		type={ inputType }
		id={ id }
        hx-get={ validation_path }
        hx-target={ fmt.Sprintf("#%v-error", id)}
        hx-trigger="keyup changed delay:300ms"
        hx-swap="innerHTML"
		name={ id }
        value={ val }
		placeholder={ label }
		if req {
			required
		}
	class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"
    />
    <span id={fmt.Sprintf("%v-error", id)}>
        @ErrorMsg(errs)
    </span>
}
templ ErrorMsgId(id, msg string) {
    <span id={ id } class="w-full text-tul-medium-red">{ msg }</span>
}
templ InputField(inputType, id, label, val string, req bool) {
	<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
		{ label }
	</label>
	<input
		type={ inputType }
		id={ id }
		name={ id }
        if id == "thesisNumber" && val == "" {
            value={fmt.Sprintf("k22/stopien/num/%v", time.Now().Year())}
        } else {
            value={ val }
        }
		placeholder={ label }
		if req {
			required
		}
	class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"
    />
}

templ InputFieldGrade(id, label, val string, req bool) {
	<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
		{ label }
	</label>
	<input
		type="number"
		id={ id }
		name={ id }
		value={ val }
		placeholder={ label }
        if id == "averageStudyGrade" {
            step="0.01"
        } else {
            step="0.05"
        }
        min="0"
        max="6"
		if req {
			required
		}
	class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"
    />
}

templ CheckBox(id string, label string, check bool) {
    <input 
    type="checkbox" 
    id={ id } 
    name={ id }
    value="1"
    if check {
        checked
    }
    class="h-5 w-5 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
    />
    <!-- Label -->
    <label for={ id } class="text-sm font-medium text-gray-700">
        { label }
    </label>
}

templ InputFieldWithAutosuggestions(inputType string, id string, label string, val string, req bool, hx_get_value string, hx_target_value string, inputClassVal string) {
	<div class="suggestion-container" style="position: relative;">
		<label class="block text-base font-medium text-tul-dark-gray mb-1">
			{ label }
		</label>
		<input
			type={ inputType }
			id={ id }
			name={ id }
			value={ val }
			placeholder={ label }
			if req {
				required
			}
			hx-get={ hx_get_value }
			hx-swap="innerHTML"
			hx-trigger="input changed"
			hx-target={"#" + hx_target_value}

		class={ inputClassVal + " w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"} 
		/>
		<ul id={ hx_target_value } 
			class="suggestions absolute z-50 mt-1 bg-white rounded-md shadow-md" style="width: 100%;">
		</ul>
	</div>
}

templ InputDropdownStudyType(inputType, id, label, val string, req bool) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        value={ val }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="stacjonarne" if val == "stacjonarne" { selected }>Stacjonarne</option>
        <option value="niestacjonarne" if val == "niestacjonarne" { selected }>Niestacjonarne</option>
    </select>
}

templ InputDropdownStudyDegree(inputType, id, label, val string, req bool) {
    <label class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        value={ val }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="I stopień"if val == "I stopień" { selected }>I stopień</option>
        <option value="II stopień"if val == "II stopień" { selected }>II stopień</option>
		<option value="III stopień"if val == "III stopień" { selected }>III stopień</option>
    </select>
}

templ InputDropdownEmployeeTitle(inputType, id, label, val string, req bool, inputClassVal string) {
    <label class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        value={ val }
        class={ inputClassVal + " w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"}>
        <option value="" if val == "" { selected }></option>
        <option value="inż." if val == "inż." || val == "Inż." { selected }>inż.</option>
        <option value="mgr" if val == "mgr" || val == "Mgr." { selected }>mgr</option>
        <option value="mgr inż." if val == "mgr inż." || val == "Mgr. inż." || val == "mgr. inż."{ selected }>mgr inż.</option>
        <option value="dr inż." if val == "Dr." || val == "dr inż. + mgr inż." || val == "dr inż." || val == "Dr inż." || val == "dr" { selected }>dr inż.</option>
        <option value="dr hab. inż." if val == "dr hab. inż." || val == "dr hab." || val == "Dr. hab." { selected }>dr hab. inż.</option>
        <option value="prof. dr hab. inż." if val == "prof. dr inż." || val == "prof. dr hab. inż." || val == "prof. dr hab." || val == "Prof. dr hab." || val == "prof. dr hab. inż. + mgr" || val == "prof. dr hab. inż. + mgr inż." || val == "Prof. Dr hab. inż." || val == "prof." { selected }>prof. dr hab. inż.</option>
        <option value="prof. PŁ" if val == "Prof. Pł" || val == "Profesor PŁ" || val == "Prof PŁ" || val == "prof PŁ" { selected }>prof. PŁ</option>
    </select>
}


templ InputDropdownLibrary(id, label, val string) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="tak" if val == "tak" { selected }>Tak</option>
        <option value="nie" if val == "nie" { selected }>Nie</option>
		<option value="wypozyczone" if val == "wypozyczone" { selected }>Wypozyczone</option>
    </select>
}

templ InputDropdownLanguage(id, label, val string) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="polski" if val == "polski" { selected }>Polski</option>
        <option value="angielski" if val == "angielski" { selected }>Angielski</option>
    </select>
}

templ ErrorMsg(msg string) {
	if msg != "" {
		<span class="w-full text-tul-medium-red">{ msg }</span>
	}
}
