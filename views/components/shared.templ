package components

templ InputField(inputType, id, label, val string, req bool) {
	<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
		{ label }
	</label>
	<input
		type={ inputType }
		id={ id }
		name={ id }
		value={ val }
		placeholder={ label }
        if inputType == "number" {
            step="0.01"
            min="0"
            max="6"
        }
		if req {
			required
		}
	class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"
    />
}

templ CheckBox(id string, label string, check bool) {
    <input 
    type="checkbox" 
    id={ id } 
    name={ id }
    value="1"
    if check {
        checked
    }
    class="h-5 w-5 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
    />
    <!-- Label -->
    <label for={ id } class="text-sm font-medium text-gray-700">
        { label }
    </label>
}

templ InputFieldWithAutosuggestions(inputType string, id string, label string, val string, req bool, hx_get_value string, hx_target_value string, inputClassVal string) {
	<div class="suggestion-container">
		<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
			{ label }
		</label>
		<input
			type={ inputType }
			id={ id }
			name={ id }
			value={ val }
			placeholder={ label }
			if req {
				required
			}
			hx-get={ hx_get_value }
			hx-swap="innerHTML"
			hx-trigger="input changed"
			hx-target={"#" + hx_target_value}

		class={ inputClassVal + " w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"} 
		/>
		<ul id={ hx_target_value } 
			class="suggestions absolute z-50 mt-1 bg-white rounded-md shadow-md" style="width: calc(32%);">
		</ul>
	</div>
}

templ InputFieldWithAutosuggestionsSmaller(inputType string, id string, label string, val string, req bool, hx_get_value string, hx_target_value string, inputClassVal string) {
	<div class="suggestion-container">
		<label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
			{ label }
		</label>
		<input
			type={ inputType }
			id={ id }
			name={ id }
			value={ val }
			placeholder={ label }
			if req {
				required
			}
			hx-get={ hx_get_value }
			hx-swap="innerHTML"
			hx-trigger="input changed"
			hx-target={"#" + hx_target_value}

		class={ inputClassVal + " w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"} 
		/>
		<ul id={ hx_target_value } 
			class="suggestions absolute z-50 mt-1 bg-white rounded-md shadow-md" style="width: calc(20%);">
		</ul>
	</div>
}

templ InputDropdownStudyType(inputType, id, label, val string, req bool) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        value={ val }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="stacjonarne" if val == "stacjonarne" { selected }>Stacjonarne</option>
        <option value="niestacjonarne" if val == "niestacjonarne" { selected }>Niestacjonarne</option>
    </select>
}

templ InputDropdownStudyDegree(inputType, id, label, val string, req bool) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        value={ val }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="I stopień"if val == "I stopień" { selected }>I stopień</option>
        <option value="II stopień"if val == "II stopień" { selected }>II stopień</option>
		<option value="III stopień"if val == "III stopień" { selected }>III stopień</option>
    </select>
}

templ InputDropdownLibrary(id, label, val string) {
    <label for={ id } class="block text-base font-medium text-tul-dark-gray mb-1">
        { label }
    </label>
    <select
        id={ id }
        name={ id }
        class="w-full rounded-md border border-gray-200 bg-white py-3 px-5 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md">
        <option value="tak" if val == "tak" { selected }>Tak</option>
        <option value="nie" if val == "nie" { selected }>Nie</option>
		<option value="wypozyczone" if val == "wypozyczone" { selected }>Wypozyczone</option>
    </select>
}

templ ErrorMsg(msg string) {
	if msg != "" {
		<span class="w-full text-tul-medium-red">{ msg }</span>
	}
}
