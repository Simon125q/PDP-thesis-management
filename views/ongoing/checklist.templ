package ongoing

import "thesis-management-app/types"
import "fmt"

templ Checklist(tasks []types.Task, thesis_id int) {
    <span id="tasks" class="py-2">
        for _, task := range tasks {
            @Task(task)
        }
    </span>
	<form
        hx-post={fmt.Sprintf("/checklist/%v", thesis_id)}
        hx-trigger="submit"
        hx-attributes="#new_task"
        hx-target="#tasks"
        hx-swap="beforeend"
    >
    <span
        id="new_task_swap"
    >
        @NewTaskInput()
    </span>
		<button type="submit">
			Dodaj
		</button>
	</form>
}

templ Task(task types.Task) {
	<div class="flex items-start space-x-2 py-1 rounded-md border border-gray-100">
        <input
            type="checkbox" 
            id={ fmt.Sprintf("is_completed_%v", task.Id)}
            name={ fmt.Sprintf("is_completed_%v", task.Id)}
            value="1"
            if task.IsCompleted == 1 {
                checked
            }
            hx-put={fmt.Sprintf("/checklist/%v", task.Id)}
            hx-trigger="change"
            hx-attributes={fmt.Sprintf("#is_completed_%v", task.Id)}
            class="h-5 w-5 text-red-600 border-gray-300 rounded focus:ring-red-500"
        />
        <p
            class="px-3 text-base font-medium text-gray-tul-dark-gray"
        >
            { task.Content }
        </p>
	</div>
}

templ NewTaskSwap(task types.Task) {
    @Task(task) 
    <span
        id="new_task_swap"
        hx-swap-oob="true"
    >
        @NewTaskInput()
    </span>
}

templ NewTaskInput() {
    <input 
        type="text" 
        id="new_task" 
        name="new_task"
        placeholder="Dodaj nowy podpunkt"
        class="w-2/3 rounded-md border border-gray-200 bg-white py-3 px-3 text-base font-medium text-gray-tul-dark-gray outline-none focus:border-tul-light-red focus:shadow-md"
    />
}
